# source: https://lastknowngood.knowledge.maana.io:8443/service/cli.test00/graphql
# timestamp: Sun Nov 17 2019 10:37:13 GMT-0800 (Pacific Standard Time)

"""Autogenerated input for adding instance of Employer"""
input AddEmployerInput {
  id: ID
  name: String!
  forProfit: Boolean!
  ceo: ID
  employees: [ID]
}

"""Autogenerated input for adding instance of Person"""
input AddPersonInput {
  id: ID
  name: String!
  dob: Date
  age: Int
  employer: ID
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

scalar Date

scalar DateTime

type Employer {
  id: ID!
  name: String!
  forProfit: Boolean!
  ceo: Person
  employees: [Person]
}

input FieldFilterInput {
  """one of the following is required"""
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """one of the following is required - except in the case of count queries"""
  fieldId: ID
  fieldName: String

  """optional if omitted outer query is used"""
  alias: String
  op: AggregateOp
}

type FieldValue {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """Continuation token"""
  token: String
  fieldIds: [ID]

  """rowKeys: [Int]"""
  records: [[FieldValue]]
}

scalar JSON

input KindQueryInput {
  """projected kind (one of the following is required)"""
  kindId: ID
  kindName: String
  serviceId: ID

  """optional alias for projection binding"""
  alias: String

  """projected fields"""
  projection: [FieldProjectionInput]

  """distinct Projected result"""
  distinct: Boolean

  """filters (where)"""
  fieldFilters: [FieldFilterInput]

  """conjunction (where)"""
  and: [KindQueryInput]

  """disjunction (where)"""
  or: [KindQueryInput]

  """join (if conjunction or disjunction)"""
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type Mutation {
  """Clear cache for this service"""
  clearCache: Boolean!

  """Autogenerated mutation for adding single instance of Person"""
  addPerson(input: AddPersonInput!): ID

  """Autogenerated mutation for adding multiple instances of Person"""
  addPersons(input: [AddPersonInput]!): [ID!]!

  """Autogenerated mutation for updating single instance of Person"""
  updatePerson(input: UpdatePersonInput!): ID

  """Autogenerated mutation for updating multiple instance of Person"""
  updatePersons(input: [UpdatePersonInput]!): [ID!]!

  """Autogenerated mutation for deleting single instance of Person"""
  deletePerson(id: ID!): Person

  """Autogenerated mutation for deleting multiple instance of Person"""
  deletePersons(ids: [ID!]): [Person!]!

  """Autogenerated mutation for adding single instance of Employer"""
  addEmployer(input: AddEmployerInput!): ID

  """Autogenerated mutation for adding multiple instances of Employer"""
  addEmployers(input: [AddEmployerInput]!): [ID!]!

  """Autogenerated mutation for updating single instance of Employer"""
  updateEmployer(input: UpdateEmployerInput!): ID

  """Autogenerated mutation for updating multiple instance of Employer"""
  updateEmployers(input: [UpdateEmployerInput]!): [ID!]!

  """Autogenerated mutation for deleting single instance of Employer"""
  deleteEmployer(id: ID!): Employer

  """Autogenerated mutation for deleting multiple instance of Employer"""
  deleteEmployers(ids: [ID!]): [Employer!]!
}

type Person {
  id: ID!
  name: String!
  dob: Date
  age: Int
  employer: Employer
}

type Query {
  CKGErrors: [String]

  """All instances of Person kind"""
  allPersons(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Person!]!

  """Get single instance of Person kind by ID"""
  person(id: ID!): Person

  """Get list of instance of Person kind by IDs"""
  persons(ids: [ID]!): [Person!]!

  """Get instances of Person kind based on one or more field filters"""
  personFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Person!]!

  """All instances of Employer kind"""
  allEmployers(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Employer!]!

  """Get single instance of Employer kind by ID"""
  employer(id: ID!): Employer

  """Get list of instance of Employer kind by IDs"""
  employers(ids: [ID]!): [Employer!]!

  """Get instances of Employer kind based on one or more field filters"""
  employerFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Employer!]!

  """Mandatory service manifest."""
  info: Info!

  """Kind Query"""
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

scalar Time

"""Autogenerated input for modifying instance of Employer"""
input UpdateEmployerInput {
  id: ID!
  name: String
  forProfit: Boolean
  ceo: ID
  employees: [ID]
}

"""Autogenerated input for modifying instance of Person"""
input UpdatePersonInput {
  id: ID!
  name: String
  dob: Date
  age: Int
  employer: ID
}
